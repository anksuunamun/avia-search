{"version":3,"sources":["components/Filters/Filters.module.css","components/Flights/Segment/Segment.module.css","components/Flights/Flight.module.css","utils/helper-functions.ts","components/Flights/Segment/Segment.tsx","components/Flights/Flight.tsx","components/Filters/Filters.tsx","utils/sorts-and-filters.ts","App.tsx","dal/flights.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","addZero","time","getFlightDuration","flight","routes","reduce","acc","current","duration","formatDuration","result","days","Math","floor","hours","minutes","push","join","getAirlinesNames","flights","names","map","includes","flightCaption","Segment","props","departureCity","depDate","Date","departureDate","depDateStr","getDate","Intl","DateTimeFormat","month","format","weekday","arrDate","arrivalDate","arrDateStr","className","styles","segment","segment_header","caption","departureAirport","uid","arrivalCity","arrivalAirport","greyLine","segment_dates","getHours","getMinutes","segment_stops","boldGreyLine","stops","airline","Flight","segments","item","flight_header","price","flight_segments","blueLine","SortFilter","id","onChange","text","currentSort","htmlFor","type","checked","Filters","airlinesFilters","airlinesNames","name","v1","airlines","some","a","disabled","disabledAirlines","filterByCompanyName","filtersWrapper","grayBlock","filterBlock","sortByPriceAscendingHandler","sortByPriceDescendingHandler","sortByTravelTimeHandler","stopsCount","i","filterByStopsCountHandler","value","min","event","setLowPriceBorderHandler","currentTarget","max","setHighPriceBorderHandler","grayBlockBot","sortByPriceAscending","sort","flight1","flight2","getFilteredFlights","companies","length","filter","company","rangeFilterResult","stop","getSortedFlights","sortType","sortByPriceDescending","sortByTravelTime","App","useState","setFlights","airLinesNames","useMemo","setAirlines","setCurrentSort","setMin","setMax","setStopsCount","flightsForRender","setFlightsForRender","setDisabledAirlines","useEffect","data","legs","leg","random","key","total","amount","carrier","flightsItems","fl","s","airLine","onCurrentSortHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27fd4656.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBlock\":\"Filters_filterBlock__10HuD\",\"grayBlock\":\"Filters_grayBlock__2-p83\",\"grayBlockBot\":\"Filters_grayBlockBot__3IK12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"segment\":\"Segment_segment__1ou07\",\"segment_header\":\"Segment_segment_header__2b3B6\",\"segment_dates\":\"Segment_segment_dates__2I02f\",\"greyLine\":\"Segment_greyLine__2CwuL\",\"segment_stops\":\"Segment_segment_stops__2aNK_\",\"boldGreyLine\":\"Segment_boldGreyLine__3pxKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flight\":\"Flight_flight__3gMFt\",\"flight_header\":\"Flight_flight_header__245uJ\",\"flightCaption\":\"Flight_flightCaption__3Whsa\",\"flight_segments\":\"Flight_flight_segments__3-A3M\",\"blueLine\":\"Flight_blueLine__21HwV\"};","import {FlightsType} from '../App';\r\n\r\nexport const addZero = (time: number) => {\r\n    return time < 10 ? `0${time}` : time;\r\n}\r\n\r\nexport const getFlightDuration = (flight: FlightsType) => flight.routes.reduce((acc, current) => acc + current.duration, 0)\r\n\r\nexport const formatDuration = (duration: number) => {\r\n    let result = [];\r\n    let days = Math.floor(duration / (60 * 24));\r\n    let hours = Math.floor(duration / 60 - days * 24);\r\n    let minutes = Math.floor(duration - days * 24 * 60 - hours * 60);\r\n    days > 1 && result.push(`${days} д`);\r\n    hours && result.push(`${hours} ч`);\r\n    minutes && result.push(`${minutes} мин`);\r\n    return result.join(' ');\r\n}\r\n\r\nexport const generateStops = () => Math.random() > 0.5 ? 1 : 0\r\n\r\nexport const getAirlinesNames = (flights: Array<FlightsType>) => {\r\n    let names: Array<string> = [];\r\n    flights.map(flight => !names.includes(flight.flightCaption) && names.push(flight.flightCaption));\r\n    return names;\r\n}","import React from 'react';\r\nimport styles from './Segment.module.css';\r\nimport {FlightType} from '../../../App';\r\nimport {addZero, formatDuration} from '../../../utils/helper-functions';\r\n\r\n\r\nconst Segment: React.FC<FlightType> = (props) => {\r\n    if (!props.departureCity) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    let depDate = new Date(props.departureDate)\r\n    let depDateStr = `${depDate.getDate()} ${Intl.DateTimeFormat('ru', {month: 'short'}).format(depDate)} ${Intl.DateTimeFormat('ru', {weekday: 'short'}).format(depDate)}`\r\n\r\n    let arrDate = new Date(props.arrivalDate)\r\n    let arrDateStr = `${arrDate.getDate()} ${Intl.DateTimeFormat('ru', {month: 'short'}).format(arrDate)} ${Intl.DateTimeFormat('ru', {weekday: 'short'}).format(arrDate)}`\r\n\r\n    return (\r\n        <div className={styles.segment}>\r\n            <div className={styles.segment_header}>{props.departureCity.caption}, {props.departureAirport.caption}\r\n                <span> ({props.departureAirport.uid})</span>\r\n                <span> &#8594; </span> {props.arrivalCity.caption}, {props.arrivalAirport.caption}<span> ({props.arrivalAirport.uid})</span>\r\n            </div>\r\n            <div className={styles.greyLine}/>\r\n            <div className={styles.segment_dates}>\r\n                <div>\r\n                    <span>{`${addZero(depDate.getHours())}:${addZero(depDate.getMinutes())}`} </span>\r\n                    <span>{depDateStr}</span>\r\n                </div>\r\n                <div>&#9719; {formatDuration(props.duration)}</div>\r\n                <div>\r\n                    <span>{arrDateStr} </span>\r\n                    <span>{`${addZero(new Date(props.arrivalDate).getHours())}:${addZero(new Date(props.arrivalDate).getMinutes())}`} </span>\r\n                </div>\r\n            </div>\r\n            <div className={styles.segment_stops}>\r\n                <div className={styles.boldGreyLine}/>\r\n                <span>{props.stops ? props.stops + ' пересадка' : props.stops + ' пересадок'}</span>\r\n                <div className={styles.boldGreyLine}/>\r\n            </div>\r\n            <div>Рейс выполняет: {props.airline.caption}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Segment;","import React from 'react';\r\nimport Segment from './Segment/Segment';\r\nimport {FlightsType, FlightType} from '../../App';\r\nimport styles from './Flight.module.css'\r\n\r\n\r\nconst Flight: React.FC<FlightsType> = (props) => {\r\n    const segments = props.routes.map((item: FlightType) => <Segment {...item}/>)\r\n\r\n    if (!props.routes) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return (\r\n        <div className={styles.flight}>\r\n            <div className={styles.flight_header}>\r\n                <div>{props.flightCaption}</div>\r\n                <div>\r\n                    <span>{props.price} ₽</span>\r\n                    <span>Стоимость для одного взрослого пассажира</span>\r\n                </div>\r\n            </div>\r\n            <div className={styles.flight_segments}>\r\n                {segments[0]}\r\n                <div className={styles.blueLine}/>\r\n                {segments[1]}\r\n            </div>\r\n            <button>ВЫБРАТЬ</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Flight","import React, {ChangeEvent} from 'react';\r\nimport styles from './Filters.module.css';\r\nimport {v1} from 'uuid';\r\nimport {CurrentSortType} from '../../App';\r\n\r\ntype FiltersPropsType = {\r\n    sortByPriceDescendingHandler: () => void\r\n    sortByPriceAscendingHandler: () => void\r\n    sortByTravelTimeHandler: () => void\r\n    filterByStopsCountHandler: (stops: number) => void\r\n    filterByCompanyName: (airLine: string) => void\r\n    airlinesNames: string[]\r\n    currentSort: CurrentSortType\r\n    onCurrentSortHandler: (value: CurrentSortType) => void\r\n    stopsCount: number[]\r\n    min: number\r\n    max: number\r\n    setHighPriceBorderHandler: (value: number) => void\r\n    setLowPriceBorderHandler: (value: number) => void\r\n    airlines: string[]\r\n    disabledAirlines: string[]\r\n}\r\n\r\nconst Filters: React.FC<FiltersPropsType> = (props) => {\r\n\r\n    const airlinesFilters = props.airlinesNames.map(name => {\r\n        const id = v1();\r\n        return (\r\n            <label htmlFor={id} key={id}>\r\n                <input type=\"checkbox\"\r\n                       checked={props.airlines.some(a => a === name)}\r\n                       disabled={props.disabledAirlines.includes(name)}\r\n                       id={id}\r\n                       onChange={() => props.filterByCompanyName(name)}/> - {name}\r\n            </label>\r\n        )\r\n    })\r\n\r\n    const onMinChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        props.setLowPriceBorderHandler(+event.currentTarget.value)\r\n    }\r\n    const onMaxChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        props.setHighPriceBorderHandler(+event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.filtersWrapper}>\r\n            <div className={styles.grayBlock}/>\r\n            <div className={styles.filterBlock}>\r\n                <h4>Сортировать</h4>\r\n                <SortFilter onChange={props.sortByPriceAscendingHandler}\r\n                            id={'priceAscending'}\r\n                            text={' - по возрастанию цены'}\r\n                            currentSort={props.currentSort}/>\r\n                <SortFilter onChange={props.sortByPriceDescendingHandler}\r\n                            id={'priceDescending'}\r\n                            text={' - по убыванию цены'}\r\n                            currentSort={props.currentSort}/>\r\n                <SortFilter onChange={props.sortByTravelTimeHandler}\r\n                            id={'travelTime'}\r\n                            text={' - по времени в пути'}\r\n                            currentSort={props.currentSort}/>\r\n            </div>\r\n            <div className={styles.filterBlock}>\r\n                <h4>Фильтровать</h4>\r\n                <label htmlFor=\"0\"><input type=\"checkbox\"\r\n                                          id={'0'}\r\n                                          checked={props.stopsCount.some(i => i === 1)}\r\n                                          onChange={() => props.filterByStopsCountHandler(1)}/> - 1\r\n                    пересадка</label>\r\n                <label htmlFor=\"1\"><input type=\"checkbox\"\r\n                                          id={'1'}\r\n                                          checked={props.stopsCount.some(i => i === 0)}\r\n                                          onChange={() => props.filterByStopsCountHandler(0)}/> - без\r\n                    пересадок</label>\r\n            </div>\r\n            <div className={styles.filterBlock}>\r\n                <h4>Цена</h4>\r\n                <label htmlFor=\"filter6\">От <input type=\"number\"\r\n                                                   value={props.min}\r\n                                                   onChange={onMinChangeHandler}\r\n                                                   id={'filter6'}/></label>\r\n                <label htmlFor=\"filter7\">До <input type=\"number\"\r\n                                                   value={props.max}\r\n                                                   onChange={onMaxChangeHandler}\r\n                                                   id={'filter7'}/></label>\r\n            </div>\r\n            <div className={styles.filterBlock}>\r\n                <h4>Авиакомпании</h4>\r\n                {airlinesFilters}\r\n            </div>\r\n            <div className={`${styles.grayBlock} ${styles.grayBlockBot}`}/>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype SortFilterPropsType = {\r\n    id: string\r\n    onChange: () => void\r\n    text: string\r\n    currentSort: CurrentSortType\r\n}\r\n\r\nconst SortFilter: React.FC<SortFilterPropsType> = ({id, onChange, text, currentSort}) => {\r\n    return (\r\n        <label htmlFor={id}>\r\n            <input type=\"radio\"\r\n                   id={id}\r\n                   checked={currentSort === id}\r\n                   onChange={() => onChange()}/>\r\n            {text}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default Filters;","import {CurrentSortType, FlightsType} from '../App';\r\nimport {getFlightDuration} from './helper-functions';\r\n\r\nexport const sortByPriceDescending = (flights: Array<FlightsType>) => {\r\n    return [...flights].sort((flight1, flight2) => +flight2.price - +flight1.price)\r\n}\r\n\r\nexport const sortByPriceAscending = (flights: Array<FlightsType>) => {\r\n    return [...flights].sort((flight1, flight2) => +flight1.price - +flight2.price)\r\n}\r\nexport const sortByTravelTime = (flights: Array<FlightsType>) => {\r\n    return [...flights].sort((flight1, flight2) => getFlightDuration(flight1) - getFlightDuration(flight2))\r\n}\r\n\r\nexport const filterByCompanyName = (flights: Array<FlightsType>, companies: string[]) => {\r\n    return companies.length > 0 ? flights.filter(flight => companies.some(company => company === flight.flightCaption)) : flights;\r\n}\r\n\r\nexport const getFilteredFlights = (flights: Array<FlightsType>, stopsCount: number[], min: number, max: number, companies: string[]) => {\r\n    return filterByCompanyName(flights.filter(flight => {\r\n        let stops = flight.routes.reduce((acc, current) => Math.max(acc, current.stops), 0);\r\n        let rangeFilterResult = (+flight.price >= min && +flight.price <= max);\r\n        let stopsFilterResult = stopsCount.some(stop => stop === stops)\r\n        return stopsFilterResult && rangeFilterResult\r\n    }), companies)\r\n}\r\n\r\nexport const getSortedFlights = (flights: Array<FlightsType>, sortType: CurrentSortType) => {\r\n    if (sortType === 'priceAscending') return sortByPriceAscending(flights);\r\n    if (sortType === 'priceDescending') return sortByPriceDescending(flights);\r\n    if (sortType === 'travelTime') return sortByTravelTime(flights);\r\n    return flights;\r\n}","import React, {useEffect, useMemo, useState} from 'react';\nimport './App.css';\nimport Flight from './components/Flights/Flight';\nimport Filters from './components/Filters/Filters';\nimport {getFlights} from './dal/flights';\nimport {\n    getFilteredFlights, getSortedFlights,\n    sortByPriceAscending,\n} from './utils/sorts-and-filters';\nimport {getAirlinesNames} from './utils/helper-functions';\n\nexport type FlightType = {\n    airline: { uid: string, caption: string, airlineCode: string }\n    arrivalAirport: { uid: string, caption: string }\n    arrivalCity: { uid: string, caption: string }\n    arrivalDate: string\n    departureAirport: { uid: string, caption: string }\n    departureCity: { uid: string, caption: string }\n    departureDate: string\n    key: string\n    stops: number\n    duration: number\n}\n\nexport type FlightsType = {\n    flightCaption: string\n    key: string\n    price: string\n    routes: Array<FlightType>\n}\n\nexport type CurrentSortType = 'priceAscending' | 'priceDescending' | 'travelTime'\n\nfunction App() {\n\n    const [flights, setFlights] = useState<Array<FlightsType>>([]);\n\n    let airLinesNames = useMemo(() => getAirlinesNames(flights), [flights]);\n\n    const [airlines, setAirlines] = useState<Array<string>>(airLinesNames);\n    const [currentSort, setCurrentSort] = useState<CurrentSortType>('priceAscending');\n    const [min, setMin] = useState<number>(0);\n    const [max, setMax] = useState<number>(1000000);\n    const [stopsCount, setStopsCount] = useState<number[]>([0, 1]);\n\n    const [flightsForRender, setFlightsForRender] = useState<Array<FlightsType>>([]);\n\n    const [disabledAirlines, setDisabledAirlines] = useState<string[]>([])\n\n    useEffect(() => {\n        const flights = getFlights()\n        setFlights(flights);\n        setFlightsForRender(sortByPriceAscending(getFilteredFlights(flights, stopsCount, min, max, [])));\n        setAirlines(getAirlinesNames(flights));\n    }, [])\n\n    let flightsItems = useMemo(() => flightsForRender.map(item => <Flight {...item} />), [flightsForRender]);\n\n    useEffect(() => {\n        flights.length !== 0 && setFlightsForRender(getSortedFlights((getFilteredFlights(flights, stopsCount, min, max, airlines)), currentSort))\n    }, [stopsCount, currentSort, min, max, airlines])\n\n    useEffect(() => {\n        let fl = getSortedFlights((getFilteredFlights(flights, stopsCount, min, max, [])), currentSort)\n        setDisabledAirlines(airLinesNames.filter(name => !getAirlinesNames(fl).includes(name)));\n    }, [stopsCount, currentSort, min, max])\n\n    const sortByPriceDescendingHandler = () => {\n        setCurrentSort('priceDescending');\n    }\n    const sortByPriceAscendingHandler = () => {\n        setCurrentSort('priceAscending');\n    }\n    const sortByTravelTimeHandler = () => {\n        setCurrentSort('travelTime');\n    }\n\n    const filterByStopsCountHandler = (stops: number) => {\n        if (stopsCount.some(stop => stop === stops)) {\n            setStopsCount(stopsCount.filter(s => s !== stops))\n        } else {\n            setStopsCount([...stopsCount, stops])\n        }\n    }\n    const filterByCompanyNameHandler = (airLine: string) => {\n        if (airlines.some(a => a === airLine)) {\n            setAirlines(airlines.filter(a => a !== airLine))\n        } else {\n            setAirlines([...airlines, airLine])\n        }\n    }\n    const setLowPriceBorderHandler = (min: number) => {\n        setMin(min);\n    }\n    const setHighPriceBorderHandler = (max: number) => {\n        setMax(max);\n    }\n\n    const onCurrentSortHandler = (value: CurrentSortType) => {\n        setCurrentSort(value);\n    }\n\n    if (flights.length === 0 && flightsForRender.length === 0) {\n        return <div>Loading...</div>\n    }\n\n    return (\n        <div className=\"App\">\n            <div>\n                <Filters sortByPriceDescendingHandler={sortByPriceDescendingHandler}\n                         sortByPriceAscendingHandler={sortByPriceAscendingHandler}\n                         sortByTravelTimeHandler={sortByTravelTimeHandler}\n                         filterByStopsCountHandler={filterByStopsCountHandler}\n                         filterByCompanyName={filterByCompanyNameHandler}\n                         airlinesNames={airLinesNames}\n                         currentSort={currentSort}\n                         onCurrentSortHandler={onCurrentSortHandler}\n                         stopsCount={stopsCount}\n                         min={min}\n                         max={max}\n                         setLowPriceBorderHandler={setLowPriceBorderHandler}\n                         setHighPriceBorderHandler={setHighPriceBorderHandler}\n                         airlines={airlines}\n                         disabledAirlines={disabledAirlines}/>\n            </div>\n            <div>\n                {flightsItems}\n                <div className={'moreButton'}>\n                    <button>Показать еще</button>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import {v1} from 'uuid';\r\n// @ts-ignore\r\nimport data from './flights.json';\r\nimport {generateStops} from '../utils/helper-functions';\r\n\r\n\r\nexport const getFlights = () => {\r\n    // @ts-ignore\r\n    return data.result.flights.map((flight: any) => {\r\n        const routes = flight.flight.legs.map((leg: any) => {\r\n            const segment = leg.segments[0];\r\n            return {\r\n                airline: segment.airline,\r\n                departureCity: segment.departureCity,\r\n                departureAirport: segment.departureAirport,\r\n                departureDate: segment.departureDate,\r\n                arrivalCity: segment.arrivalCity,\r\n                arrivalAirport: segment.arrivalAirport,\r\n                arrivalDate: segment.arrivalDate,\r\n                stops: generateStops(),\r\n                duration: leg.duration,\r\n                key: v1()\r\n            }\r\n        })\r\n        return {\r\n            price: flight.flight.price.total.amount,\r\n            flightCaption: flight.flight.carrier.caption,\r\n            routes: routes,\r\n            key: v1()\r\n        }\r\n    });\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}